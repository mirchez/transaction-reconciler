

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LedgerEntry {
  id        String   @id @default(cuid())
  date      DateTime
  amount    Decimal  @db.Decimal(12, 2)
  vendor    String
  category  String?
  matched   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  matchLogs MatchLog[]
}

model BankTransaction {
  id          String   @id @default(cuid())
  date        DateTime
  amount      Decimal  @db.Decimal(12, 2)
  description String
  matched     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  matchLogs MatchLog[]
}

model MatchLog {
  id                 String   @id @default(cuid())
  ledgerEntryId      String
  bankTransactionId  String
  matchScore         Float?   // Si us√°s fuzzy matching por texto/fecha/monto
  createdAt          DateTime @default(now())

  ledgerEntry        LedgerEntry     @relation(fields: [ledgerEntryId], references: [id])
  bankTransaction    BankTransaction @relation(fields: [bankTransactionId], references: [id])
}

model GoogleAuth {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String
  accessToken  String
  refreshToken String?
  expiryDate   DateTime?
  scope        String
  tokenType    String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
